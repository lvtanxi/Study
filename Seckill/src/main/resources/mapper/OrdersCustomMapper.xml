<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间,作用就是对sql进行分类化的管理,理解为sql隔离
    注意:使用mapper代理开发时，namespace有特殊作用,namespace等于mapper接口地址
 -->

<mapper namespace="org.seckill.dao.OrdersCustomDao">
    <!-- 定义查询订单关联用户的 resultMap,将整个的查询结果映射到org.seckill.entity.Orders中 -->
    <resultMap type="org.seckill.entity.Orders" id="OrdersUserResultMap">
        <!-- 配置映射的订单信息 -->

        <!-- id:查询列中的唯一标识,订单信息中的唯一标识，如果多列组成唯一标识(如：一般数据库设计中的字典表 使用联合主键)，就需要配置多个id
            column:订单信息的唯一标识 列
            property:订单信息的唯一标识列所映射到orders中的那个属性(假如：数据库中orders表中的主键为orders_id,而实体属性名称为ordersId,
                则这个配置应为<id column="orders_id" property="ordersId"/>,类似hibernate实体映射文件配置)。
        -->
        <id column="id" property="id"/>
        <result column="user_id" property="userid"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createTime"/>
        <result column="note" property="note"/>

        <!-- 配置映射的关联用户信息 -->

        <!--association:用于映射关联查询单个对象的信息
            property:要将关联查询的用户信息映射到Orders中那个属性
          -->
        <association property="user" javaType="org.seckill.entity.User">
            <!-- id:关联查询用户的唯一标识
                column:指定唯一标识用户信息的列
                property:映射到user的那个属性
            -->
            <id column="user_id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
        </association>

    </resultMap>
    <!-- 查询订单(关联用户)及订单明细的resultMap -->
    <resultMap type="org.seckill.entity.Orders" id="ordersAndOrderDetailResultMap" extends="OrdersUserResultMap">
        <!-- 订单信息 -->
        <!-- 关联用户信息 -->
        <!-- 使用extends继承，不用在中配置订单信息和用户信息的映射-->

        <!-- 关联订单明细信息
            一个订单关联查询出了多条订单明细,要使用collection映射
            collection:对关联查询到的多条记录映射到集合中
            property:将关联查询到的多条记录映射到orders类的那个属性
            ofType:指定映射的集合属性中pojo的类型
        -->
        <collection property="orderdetails" ofType="org.seckill.entity.OrderDetail">
            <!-- id:唯一标识
                 property：要将订单明细的唯一标识映射到org.seckill.entity.OrderDetail的那个属性
             -->
            <id column="orderdetail_id" property="id"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
            <result column="orders_id" property="ordersId"/>
        </collection>
    </resultMap>
    <!-- 查询订单，关联查询用户信息 -->
    <select id="findOrdersUser" resultType="org.seckill.dto.OrdersCustom">
        SELECT
            t1.*,
            t2.username,
            t2.sex,
            t2.address
        FROM
            orders t1,
            t_user t2
        WHERE t1.user_id = t2.id
    </select>
    <!-- 查询订单，关联查询用户信息,使用resultMap实现 -->
    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        SELECT t1.*,
        t2.username,
        t2.sex,
        t2.address
        FROM
        orders t1,
        t_user t2
        WHERE t1.user_id=t2.id
    </select>

    <!-- 查询订单关联查询用户及订单明细 -->
    <select id="findOrdersAndOrderDetailResultMap" resultMap="ordersAndOrderDetailResultMap">
        SELECT
        t1.*,
        t2.username,
        t2.sex,
        t2.address,
        t3.id orderdetail_id,
        t3.items_id,
        t3.items_num,
        t3.orders_id
        FROM
        orders t1,
        t_user t2,
        orderdetail t3
        WHERE t1.user_id = t2.id AND t3.orders_id=t1.id
    </select>
</mapper>